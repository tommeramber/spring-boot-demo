apiVersion: v1
kind: Template
metadata:
  name: spring-boot-demo
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/instance: postgresql
    name: postgresql
  spec:
    ports:
    - name: 5432-tcp
      port: ${{DB_PORT}}
      protocol: TCP
      targetPort: ${{DB_PORT}}
    selector:
      deploymentconfig: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: demo
      expose: "true"
    name: demo
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: demo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: postgresql
    name: postgresql
  spec:
    replicas: 1
    selector:
      deploymentConfig: postgresql
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: postgresql
          deploymentConfig: postgresql
      spec:
        containers:
          - env:
            - name: POSTGRESQL_DATABASE
              value: ${DB_NAME}
            - name: POSTGRESQL_USER
              value: ${DB_USERNAME}
            - name: POSTGRESQL_PASSWORD
              value: ${DB_PASSWORD}
            image: registry.redhat.io/rhscl/postgresql-10-rhel7:latest
            imagePullPolicy: IfNotPresent
            name: postgresql
            ports:
            - containerPort: ${{DB_PORT}}
              protocol: TCP
            readinessProbe:
              exec:
                command:
                - /bin/sh
                - -i
                - -c
                - psql -h 127.0.0.1 -c 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: demo
    name: demo
  spec:
    replicas: 1
    selector:
      deploymentConfig: demo
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: demo
          deploymentConfig: demo
      spec:
        containers:
          - env:
            - name: DB_URL
              value: ${DB_URL}
            - name: DB_PORT
              value: "${DB_PORT}"
            - name: DB_NAME
              value: ${DB_NAME}
            - name: DB_USERNAME
              value: ${DB_USERNAME}
            - name: DB_PASSWORD
              value: ${DB_PASSWORD}
            image: ${APPLICATION_IMAGE}
            imagePullPolicy: Always
            name: demo
            ports:
            - containerPort: ${{DB_PORT}}
              protocol: TCP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: demo
      expose: "true"
    name: demo
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: demo
      weight: 100
    wildcardPolicy: None
parameters:
  - name: DB_NAME
    description: database name
    value: demodb
  - name: DB_PASSWORD
    description: Password used for DB authentication
    value: mypass
  - name: DB_USERNAME
    description: DB User
    value: myuser
  - name: DB_URL
    description: DB Service
    value: postgresql
  - name: DB_PORT
    description: DB Service Port
    value: "5432"
  - name: APPLICATION_IMAGE
    value: quay.io/tamber/tommerdemo